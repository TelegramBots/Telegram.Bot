trigger:
  branches:
    exclude:
      - master
      - gh-pages
  paths:
    exclude:
      - ".github/"
      - docs/
      - README.md
      - CHANGELOG.md
      - CONTRIBUTING.md

pr: none

variables:
  - template: variables.yml

stages:
  - stage: Build
    displayName: ðŸš§ Build
    jobs:
      - job: Build
        displayName: Build with .NET Core SDK
        pool:
          vmImage: $(vmImage)
        steps:
          - task: UseDotNet@2
            displayName: Install .NET SDK
            inputs:
              packageType: sdk
              version: 6.0.x
          - pwsh: >
              dotnet build 
              --configuration $(buildConfiguration)
              -p:Version=$(ciVersion)
              -p:CI_EMBED_SYMBOLS=true 
              $(projectPath)
            displayName: Build project with CI version
          - pwsh: >
              dotnet pack
              --no-build
              --output "$(Build.ArtifactStagingDirectory)/packages"
              --configuration $(buildConfiguration)
              -p:Version=$(ciVersion)
              -p:CI_EMBED_SYMBOLS=true
              $(projectPath)
            displayName: Create CI nuget package
          - publish: $(Build.ArtifactStagingDirectory)/packages
            artifact: packages
  - stage: UnitTest
    dependsOn: Build
    displayName: ðŸ§ª Unit test
    jobs:
      - template: jobs/run-unit-tests.yml
        parameters:
          buildConfiguration: $(buildConfiguration)
          projects: $(unitTestsProject)
          strategies:
            - Ubuntu: ubuntu-20.04
  - stage: PublishArtifacts
    dependsOn: Build
    displayName: ðŸ“¤ Publish artifacts
    jobs:
      - job: PublishArtifacts
        displayName: Publish artifacts
        pool:
          vmImage: $(vmImage)
        steps:
          - checkout: none
          - download: current
            artifact: packages
          - task: UseDotNet@2
            displayName: Install .NET sdk
            inputs:
              packageType: sdk
              version: 6.0.x
          - task: NuGetAuthenticate@0
            displayName: 'NuGet Authenticate'
          - task: NuGetCommand@2
            displayName: Publish CI package to Azure artifacts
            inputs:
              command: 'push'
              packagesToPush: $(Pipeline.Workspace)/packages/*.*upkg
              nuGetFeedType: 'internal'
              vstsFeed: $(internalFeedName)
              publishVstsFeed: $(internalFeedName)
              allowPackageConflicts: true
