trigger:
  branches:
    exclude:
      - master
      - gh-pages
  paths:
    exclude:
      - ".github/"
      - docs/
      - README.md
      - CHANGELOG.md
      - CONTRIBUTING.md

pr: none

variables:
  - template: variables.yml

stages:
  - stage: Build
    displayName: ðŸš§ Build
    jobs:
      - job: Build
        displayName: Build with .NET Core SDK
        pool:
          vmImage: $(vmImage)
        steps:
          - script: node .azure-pipelines/setVersionVariables.js
            env:
              VERSION_PREFIX: $(versionPrefix)
              VERSION_SUFFIX: $(versionSuffix)
              CI_VERSION_SUFFIX: $(ciVersionSuffix)
            displayName: Set version variables
          - task: DotNetCoreCLI@2
            displayName: Build project with CI version
            inputs:
              command: build
              projects: $(projectPath)
              arguments: >
                --configuration $(buildConfiguration)
                -p:Version=$(CI_VERSION)
                -p:CI_EMBED_SYMBOLS=true
          - bash: >
              dotnet pack
              --no-build
              --output "$(Build.ArtifactStagingDirectory)/packages"
              --configuration $(buildConfiguration)
              -p:Version=$(CI_VERSION)
              -p:CI_EMBED_SYMBOLS=true
              $(projectPath)
            displayName: Create CI nuget package
          - publish: $(Build.ArtifactStagingDirectory)/packages
            artifact: packages

  - stage: UnitTest
    dependsOn: Build
    displayName: ðŸ§ª Unit test
    jobs:
      - template: jobs/run-unit-tests.yml
        parameters:
          buildConfiguration: $(buildConfiguration)
          projects: $(unitTestsProject)
          strategies:
            - Ubuntu: ubuntu-18.04

  - stage: PublishArtifacts
    dependsOn: Build
    displayName: ðŸ“¤ Publish artifacts
    jobs:
      - job: PublishArtifacts
        displayName: Publish artifacts
        pool:
          vmImage: $(vmImage)
        steps:
          - checkout: none
          - download: current
            artifact: packages
          - task: DotNetCoreCLI@2
            displayName: Publish CI package to Azure artifacts
            inputs:
              command: push
              nuGetFeedType: internal
              feedPublish: $(internalFeedName)
              publishPackageMetadata: true
              packagesToPush: $(Pipeline.Workspace)/packages/*.*upkg
